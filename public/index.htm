<!DOCTYPE html>
<html>
	<head>
		<title><%= config.application.name%> | <%= config.application.sloga %></title>
		<meta content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0' name='viewport' />
		<meta name="viewport" content="width=device-width" />
		<link rel="Stylesheet" href="css/style.css" type="text/css" />
		<script src="js/jquery.js"></script>
		<script src="//code.jquery.com/mobile/1.3.2/jquery.mobile-1.3.2.min.js"></script>
		<script src="/socket.io/socket.io.js"></script>
	</head>

	<body>

		<div data-role="page" data-theme="a">
			<div data-role="header">
				<h1><%= config.application.name%></h1>
				<a href="#left-panel" data-icon="bars" data-iconpos="notext" data-shadow="false" data-iconshadow="false"></a>
			</div>
			<div data-role="content">
				<div data-role="content">
					
				</div>
			</div>
			<div data-role="panel" id="left-panel" data-theme="a" data-display="overlay">
				<ul data-role="listview">
					<li data-role="list-divider">Menu</li>
					<li>
						<form id="searchYouTube">
							<input name="q" placeholder="Search YouTube" value="" type="search" />							
						</form>
					</li>
					<li><a href="#" data-rel="">Playlist</a></li>
					<li><a href="#" data-rel="">Now Playing</a></li>
				</ul>
			</div>
		</div>
		<script>
			var socket = io.connect();
			$('#searchYouTube').submit(function(event){
				var search_query = $(this).find('input[name="q"]').val();
				if(search_query != ""){
					socket.emit('search', {query: search_query});
					$('#left-panel').panel('close');
					var $this = $(document),
						theme = $this.jqmData( "theme" ) || $.mobile.loader.prototype.options.theme,
						msgText = $this.jqmData( "msgtext" ) || $.mobile.loader.prototype.options.text,
						textVisible = $this.jqmData( "textvisible" ) || $.mobile.loader.prototype.options.textVisible,
						textonly = !!$this.jqmData( "textonly" );
						html = $this.jqmData( "html" ) || "";
					$.mobile.loading( "show", {
						text: msgText,
						textVisible: textVisible,
						theme: theme,
						textonly: textonly,
						html: html
					});
				}
				event.stopPropagation();
				event.preventDefault();
			});
			socket.on('youtube-search-results', function(data){
				console.log(data);
				$.mobile.loading("hide");
				$('div[data-role="content"]');
				$.each(data.items, function(index, val){
					$('div[data-role="content"]').append('<h1>' + val.title + '</h1>');
				});
			});
			socket.on('disconnection', function(data){
				console.log("Client Disconnected!", data);
			});
		</script>
	</body>
</html>